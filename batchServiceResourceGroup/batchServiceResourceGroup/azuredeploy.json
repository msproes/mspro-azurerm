{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "bsName": {
      "type": "string",
      "metadata": {
        "description": "DNS name used for public IP addresses and as base for naming other resources. Must be globally unique and 3 to 61 characters long."
      },
      "minLength": 3,
      "maxLength": 61
    },
    "keyVaultResourceGroup": {
      "type": "string",
      "defaultValue": "nombreResourceGroupKeyVault"
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Key Vault"
      }
    },
    "secretName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Secret to write on the Key Vault"
      },
      "minLength": 3,
      "maxLength": 61
    },
    "instanceCount": {
      "type": "int",
      "metadata": {
        "description": "Number of VM instances (100 or less)"
      },
      "minValue": 1,
      "maxValue": 100
    },
    "adminUsername": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Administrator username on all VMs"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Administrator password on all VMs"
      }
    },

    "storageAccountSku": {
      "type": "string",
      "defaultValue": "Standard_LRS",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_ZRS",
        "Premium_LRS"
      ],
      "metadata": {
        "description": "Storage Account type"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    }


  },
  "variables": {
    "longNamingInfix": "[toLower(parameters('bsName'))]",
    "namingInfix": "[toLower(substring(concat(parameters('bsName'), uniqueString(resourceGroup().id)), 0, 9))]",
    "storageAccountName": "[concat(variables('namingInfix'), 'sa')]",
    "storageResourceId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
    "storageApiVersion": "[providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]]",
    "batchAccountName": "[concat(variables('namingInfix'), 'ba')]",
    "batchPoolName": "[concat(variables('namingInfix'), 'bapool')]",
    "batchResourceId": "[resourceId('Microsoft.Batch/batchAccounts', variables('batchAccountName'))]",
    "batchApiVersion": "[providers('Microsoft.Batch', 'batchAccounts').apiVersions[0]]",
    "batchSecretName": "[concat(parameters('bsName'),'2batchSecret')]",
    "keyVaultResourceId": "[[resourceId(subscription().subscriptionId,  parameters('keyVaultResourceGroup'), 'Microsoft.KeyVault/vaults', parameters('keyVaultName'))]]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountname')]",
      "apiVersion": "2016-01-01",
      "location": "[parameters('location')]",
      "comments": "This storage account is used to associate to a batch account",
      "sku": {
        "name": "[parameters('storageAccountsku')]"
      },
      "kind": "Storage",
      "tags": {
        "ObjectName": "[variables('storageAccountName')]"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.Batch/batchAccounts",
      "name": "[variables('batchAccountName')]",
      "apiVersion": "2015-12-01",
      "location": "[parameters('location')]",
      "tags": {
        "ObjectName": "[variables('batchAccountName')]"
      },
      "properties": {
        "autoStorage": {
          "storageAccountId": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ]
    },
    {
      "name": "[variables('batchPoolName')]",
      "type": "Microsoft.Batch/batchAccounts/pools",
      "apiVersion": "2017-09-01",
      "properties": {
        "displayName": "pool01",
        "vmSize": "standard_a1",
        "deploymentConfiguration": {
          "cloudServiceConfiguration": {
            "osFamily": "5"
          }
        },
        "scaleSettings": {
          "fixedScale": {
            "resizeTimeout": "PT15M",
            "targetDedicatedNodes": 0,
            "targetLowPriorityNodes": 0
          }
        },
        "interNodeCommunication": "Enabled",
        "maxTasksPerNode": 1,
        "taskSchedulingPolicy": {
          "nodeFillType": "Pack"
        },

        "enableAutoScale": false,
        "enableInterNodeCommunication": false,
        "userAccounts": [
          {
            "name": "usr",
            "password": "Passw0rd",
            "elevationLevel": "NonAdmin"
          },
          {
            "name": "adm",
            "password": "Passw0rd",
            "elevationLevel": "Admin"
          }
        ],

        "certificates": [],
        "applicationPackages": [],
        "applicationLicenses": []
      },
      "dependsOn": [
        "[resourceId('Microsoft.Batch/batchAccounts', variables('batchAccountName'))]"
      ]
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[variables('storageAccountName')]"
    },
    "storageResourceId": {
      "type": "string",
      "value": "[variables('storageResourceId')]"

    },
    "batchAccountName": {
      "type": "string",
      "value": "[variables('batchAccountName')]"
    },
    "storageObject": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')))]"
    },
    "batchObject": {
      "type": "object",
      "value": "[reference(resourceId('Microsoft.Batch/batchAccounts', variables('batchAccountName')))]"
    },
    "keyVaultResourceId": {
      "type": "string",
      "value": "[variables('keyVaultResourceId')]"
    },
    "batchPrimaryKey": {
      "type": "string",
      "value": "[listKeys(variables('batchResourceId'), variables('batchApiVersion')).primary]"
    }

  }
  }
